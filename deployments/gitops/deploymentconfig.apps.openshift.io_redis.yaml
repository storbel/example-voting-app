apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.alpha.openshift.io/wait-for-ready: "true"
  creationTimestamp: "2020-02-01T07:38:09Z"
  generation: 2
  labels:
    app: redis
    template: redis-ephemeral-template
  name: redis
  namespace: voting-application
  resourceVersion: "51242"
  selfLink: /apis/apps.openshift.io/v1/namespaces/voting-application/deploymentconfigs/redis
  uid: cb5c10f4-44c5-11ea-bfc6-0242ac110037
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    name: redis
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: redis
        name: redis
    spec:
      containers:
      - env:
        - name: REDIS_PASSWORD
          value: redis_password
        image: docker-registry.default.svc:5000/openshift/redis@sha256:06dbb609484330ec6be6090109f1fa16e936afcf975d1cbc5fff3e6c7cae7542
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 1
        name: redis
        ports:
        - containerPort: 6379
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/redis/data
          name: redis-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: redis-data
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - redis
      from:
        kind: ImageStreamTag
        name: redis:3.2
        namespace: openshift
      lastTriggeredImage: docker-registry.default.svc:5000/openshift/redis@sha256:06dbb609484330ec6be6090109f1fa16e936afcf975d1cbc5fff3e6c7cae7542
    type: ImageChange
  - type: ConfigChange
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-02-01T07:38:38Z"
    lastUpdateTime: "2020-02-01T07:38:38Z"
    message: Deployment config has minimum availability.
    status: "True"
    type: Available
  - lastTransitionTime: "2020-02-01T07:38:39Z"
    lastUpdateTime: "2020-02-01T07:38:39Z"
    message: replication controller "redis-1" successfully rolled out
    reason: NewReplicationControllerAvailable
    status: "True"
    type: Progressing
  details:
    causes:
    - type: ConfigChange
    message: config change
  latestVersion: 1
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  unavailableReplicas: 0
  updatedReplicas: 1
